{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../actionTypes\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = user ? {\n  isLoggedIn: true,\n  user\n} : {\n  isLoggedIn: false,\n  user: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","state","action","type","payload"],"sources":["D:/Documents/Project/crud-app/frontend/src/reducers/auth-reducers.js"],"sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actionTypes\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,MAAM,QACD,gBAAgB;AAEvB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErD,MAAMC,YAAY,GAAGL,IAAI,GACrB;EAAEM,UAAU,EAAE,IAAI;EAAEN;AAAK,CAAC,GAC1B;EAAEM,UAAU,EAAE,KAAK;EAAEN,IAAI,EAAE;AAAK,CAAC;AAErC,eAAe,UAAUO,KAAK,GAAGF,YAAY,EAAEG,MAAM,EAAE;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKd,gBAAgB;MACnB,OAAO;QACL,GAAGY,KAAK;QACRD,UAAU,EAAE;MACd,CAAC;IACH,KAAKV,aAAa;MAChB,OAAO;QACL,GAAGW,KAAK;QACRD,UAAU,EAAE;MACd,CAAC;IACH,KAAKT,aAAa;MAChB,OAAO;QACL,GAAGU,KAAK;QACRD,UAAU,EAAE,IAAI;QAChBN,IAAI,EAAEU,OAAO,CAACV;MAChB,CAAC;IACH,KAAKF,UAAU;MACb,OAAO;QACL,GAAGS,KAAK;QACRD,UAAU,EAAE,KAAK;QACjBN,IAAI,EAAE;MACR,CAAC;IACH,KAAKD,MAAM;MACT,OAAO;QACL,GAAGQ,KAAK;QACRD,UAAU,EAAE,KAAK;QACjBN,IAAI,EAAE;MACR,CAAC;IACH;MACE,OAAOO,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}